name: Categories
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: Categories
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the categories.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "CategoryId": "1",
                   "CategoryName": "Category 1",
                   "Description": "Description of Category 1"
               },
               {
                   "CategoryId": "2",
                   "CategoryName": "Category 2",
                   "Description": "Description of Category 2"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: Categories
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified category.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
               "CategoryId": "1",
               "CategoryName": "Category 1",
               "Description": "Description of Category 1"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: Categories
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created category in storage.'
      description: 'This endpoint creates a new category with the provided details.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      CategoryId:
        name: CategoryId
        description: 'The ID of the category.'
        required: true
        example: CA00000001
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      CategoryName:
        name: CategoryName
        description: 'The name of the category.'
        required: true
        example: 'Category 1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      Description:
        name: Description
        description: 'The description of the category.'
        required: false
        example: 'This is a category description.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      CategoryId: CA00000001
      CategoryName: 'Category 1'
      Description: 'This is a category description.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Category created successfully",
              "data": {
                  "CategoryId": "CA00000001",
                  "CategoryName": "Category 1",
                  "Description": "This is a category description."
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "error": {
                  "CategoryId": [
                      "The category ID has already been taken."
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Failed to create category."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/categories/{id}'
    metadata:
      groupName: Categories
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified category in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category to update.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      CategoryName:
        name: CategoryName
        description: 'The new name of the category.'
        required: true
        example: 'Updated Category'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      Description:
        name: Description
        description: 'The new description of the category.'
        required: false
        example: 'Pariatur id dicta nulla fugiat non qui nihil vel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      CategoryName: 'Updated Category'
      Description: 'Pariatur id dicta nulla fugiat non qui nihil vel.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Category updated successfully",
           "data": {
               "CategoryId": "1",
               "CategoryName": "Updated Category",
               "Description": "New description"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "error": {
               "CategoryName": [
                   "The category name field is required."
               ]
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: Categories
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified category from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category to delete.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Category deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/categories/restore/{id}'
    metadata:
      groupName: Categories
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore the specified category from soft delete.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category to restore.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Category restored successfully",
           "data": {
               "CategoryId": "1",
               "CategoryName": "Restored Category",
               "Description": "Restored description"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "error": "Category not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
